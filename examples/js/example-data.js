var examples = [{"id":"airplanes","name":"Airplanes","html":"<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>Situation is FUBAR</title>\n  <script src=\"../luv.js\"></script>\n</head>\n<body>\n  <script>\n\n    var luv = Luv();\n\n    var fighters, lockHeed, hydro, lockHeedAngle, hydroAngle, submarine;\n\n    luv.load = function() {\n      var img = luv.graphics.Image('img/1945.png');\n                                            // sprite size, offset, border\n      var s32 = luv.graphics.SpriteSheet(img,     32,32,     3,3,    1);\n\n      fighters = [ //   x     y     frame delay\n        s32.Animation(['0-7', 0],   0.1),\n        s32.Animation(['0-7', 1],   0.2),\n        s32.Animation(['0-7', 2],   0.3),\n        s32.Animation(['0-7', 3],   0.4),\n        s32.Animation(['0-7', 4],   0.5),\n\n                  //   x1    y1    x2   y2     frame delay\n        s32.Animation([17, '6-10', 17, '9-7'], 0.6),\n        s32.Animation([18, '6-10', 18, '9-7'], 0.7),\n        s32.Animation([19, '6-10', 19, '9-7'], 0.8),\n        s32.Animation([20, '6-10', 20, '9-7'], 0.9)\n      ];\n\n                                            // sprite size, offset, border\n      var s65 = luv.graphics.SpriteSheet(img,     65,65,     300,102, 1);\n\n      lockHeed = s65.Animation([0, '0-2'], 0.1);\n      hydro    = s65.Animation(['1-3', 2], 0.1);\n\n      lockHeedAngle = 0;\n      hydroAngle    = 0;\n\n      var sSub = luv.graphics.SpriteSheet(img,     32,98,     366,102, 1);\n\n                                 // x1   y1   x2   y2  durations in object format\n      submarine = sSub.Animation(['0-6', 0, '5-1', 0], { 0: 1,\n                                                        '1-5': 0.1,\n                                                         6: 1,\n                                                        '7-11': 0.1\n                                                       });\n\n      // equivalent to this:       (Notice the 1s        here                      and here)\n      //submarine = sSub.Animation(['0-6', 0, '5-1', 0], [1, 0.1, 0.1, 0.1, 0.1, 0.1, 1, 0.1, 0.1, 0.1, 0.1, 0.1]);\n    };\n\n    luv.update = function(dt) {\n      if(!luv.media.isLoaded()) { return; }\n\n      for(var i=0; i < fighters.length; i++) {\n        fighters[i].update(dt);\n      }\n\n      lockHeed.update(dt);\n      hydro.update(dt);\n      submarine.update(dt);\n\n      lockHeedAngle += dt;\n      hydroAngle    -= dt;\n\n      // Not recommended when displaying rotated or centered images\n      // luv.graphics.setImageSmoothing(false);\n    };\n\n    luv.draw = function() {\n\n      if(!luv.media.isLoaded()) { return; }\n\n      for(var i=0; i < fighters.length; i++) {\n        luv.graphics.draw(fighters[i], (i+1)*75, (i+1)*50);\n      }\n\n      luv.graphics.drawCentered(lockHeed, 100, 432, lockHeedAngle);\n      luv.graphics.drawCentered(hydro,    250, 432, hydroAngle);\n\n      luv.graphics.draw(submarine, 500, 100);\n    };\n\n    luv.run();\n  </script>\n</body>\n</html>\n"},{"id":"bob_the_square","name":"Bob The Square","html":"<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>Who lives in a pineapple under the sea?</title>\n  <script src=\"../luv.js\"></script>\n</head>\n<body>\n  <script>\n    var luv = Luv();\n\n    var bob = {x: 400, y: 280, dx: 0, dy: 0, w:50, h:50};\n\n    luv.draw = function() {\n      luv.graphics.setColor(255,255,0);\n      var l = bob.x - bob.w/2,\n          t = bob.y - bob.h/2,\n          w = bob.w,\n          h = bob.h;\n      luv.graphics.fillRectangle(l,t,w,h);\n\n      luv.graphics.setColor(128,128,0);\n      luv.graphics.setLineWidth(3);\n      luv.graphics.strokeRectangle(l,t,w,h);\n\n      luv.graphics.setColor(255,255,255);\n\n      var r  = w/5,\n          r2 = w/13;\n\n      var x1 = l + r + r2,\n          y = t + r + r2,\n          x2 = l + w - r - r2;\n\n      luv.graphics.fillCircle(x1, y, r);\n      luv.graphics.fillCircle(x2, y, r);\n\n      luv.graphics.setColor(0,0,0);\n      luv.graphics.setLineWidth(1);\n      luv.graphics.strokeCircle(x1,y,r);\n      luv.graphics.fillCircle(x1 + bob.dx * r2,y + bob.dy * r2,r2);\n      luv.graphics.strokeCircle(x2,y,r);\n      luv.graphics.fillCircle(x2 + bob.dx * r2,y + bob.dy * r2,r2);\n\n      luv.graphics.strokeCircle(bob.x, bob.y, r2);\n      luv.graphics.strokeArc(bob.x, bob.y, 2*r, 0, Math.PI);\n    };\n\n    luv.update = function(dt) {\n      bob.dy = 0;\n\n      // up/down is managed via luv.keyboard.isDown\n      if(luv.keyboard.isDown('up'))    { bob.dy = -1; }\n      if(luv.keyboard.isDown('down'))  { bob.dy = 1; }\n\n      bob.x += bob.dx * 60 * dt;\n      bob.y += bob.dy * 60 * dt;\n    };\n\n    // left/right is managed via luv.keyboard.onPressed & luv.keyboard.onReleased\n    luv.keyboard.onPressed = function(key, code) {\n      if(key == 'left')       { bob.dx = -1; }\n      else if(key == 'right') { bob.dx = 1;  }\n    };\n\n    luv.keyboard.onReleased = function(key, code) {\n      if((key == 'left' && bob.dx == -1) ||\n         (key == 'right' && bob.dx == 1)) {\n           bob.dx = 0;\n      }\n    };\n\n    luv.run();\n  </script>\n</body>\n</html>\n"},{"id":"bubbles","name":"Bubbles","html":"<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>Refreshing Bubbles!</title>\n  <script src=\"../luv.js\"></script>\n</head>\n<body>\n  <script>\n    var luv = Luv({fullWindow: true});\n\n    var rand = function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    };\n\n    var newBubble = function() {\n      var sd = luv.graphics.getDimensions();\n      return {\n        x : rand(25, sd.width - 25),\n        y : sd.height + rand(50, 100),\n        r : rand(10, 40),\n        vy: rand(30, 80)\n      };\n    };\n\n    var bubbles = [];\n\n    luv.load = function() {\n      for(var i=1; i<100; i++) {\n        bubbles.push(newBubble());\n      }\n      luv.graphics.setBackgroundColor(255,0,30);\n    };\n\n    luv.update = function(dt) {\n      var bubble;\n\n      for(var i=0; i < bubbles.length; i++) {\n        bubble = bubbles[i];\n        bubble.y -= bubble.vy * dt;\n\n        if(bubble.y < -50) {\n          bubbles[i] = newBubble();\n        }\n      }\n    };\n\n    luv.draw = function() {\n      var sd = luv.graphics.getDimensions();\n      var bubble;\n\n      for(var i=0; i < bubbles.length; i++) {\n        bubble = bubbles[i];\n        luv.graphics.setColor(255,98,0);\n        luv.graphics.fillCircle(bubble.x, bubble.y, bubble.r);\n\n        luv.graphics.setLineWidth(bubble.r/7.0);\n        luv.graphics.setColor(255,225,200);\n        luv.graphics.strokeCircle(bubble.x, bubble.y, bubble.r);\n\n        luv.graphics.fillCircle(\n          bubble.x - bubble.r/2,\n          bubble.y - bubble.r/2.5,\n          bubble.r / 3);\n      }\n\n      luv.graphics.setColor(255,225,255);\n      var fps = Math.round(luv.timer.getFPS());\n      luv.graphics.print(\"FPS: \" + fps, sd.width - 40, 10);\n    };\n\n    luv.run();\n\n  </script>\n</body>\n</html>\n"},{"id":"cat_and_mouse","name":"Cat And Mouse","html":"<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>The cat follows the mouse</title>\n  <script src=\"../luv.js\"></script>\n</head>\n<body>\n  <script>\n    var luv = Luv({fullWindow: true});\n\n    var cat;\n    var halfPI = Math.PI / 2;\n\n    luv.load = function() {\n      cat = {\n        x: 400, y: 300, angle: 0, sx: 1, sy: 1,\n        img: luv.graphics.Image('img/cat.png')\n      };\n    };\n\n    luv.draw = function() {\n      if(!luv.media.isLoaded()) { return; }\n      luv.graphics.drawCentered(cat.img, cat.x, cat.y, cat.angle, cat.sx, cat.sy);\n      var mo = luv.mouse.getPosition();\n      luv.graphics.setColor(255,0,0,125);\n      luv.graphics.fillCircle(mo.x, mo.y, 10);\n    };\n\n    luv.update = function(dt) {\n      if(!luv.media.isLoaded()) { return; }\n\n      var mouse = luv.mouse.getPosition();\n      var dx = mouse.x - cat.x,\n          dy = mouse.y - cat.y;\n      var distance = Math.sqrt(dx*dx + dy*dy);\n      var scale    = Math.min(1, Math.max(0.25, distance == 0 ? 1 : 100 / distance));\n\n      cat.angle = Math.atan2(dy, dx);\n      cat.sx    = scale;\n      cat.sy    = cat.angle <= halfPI && cat.angle >= -halfPI ? scale : -scale;\n\n      if(distance > 5) {\n        cat.x += dx * dt;\n        cat.y += dy * dt;\n      }\n\n    };\n\n    luv.run();\n  </script>\n</body>\n</html>\n"},{"id":"ding","name":"Ding","html":"<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>Anything you do is just Ding</title>\n  <script src=\"../luv.js\"></script>\n</head>\n<body>\n  <script>\n    var luv = Luv();\n\n    var dingSound = luv.audio.Sound('sfx/ding.ogg', 'sfx/ding.mp3');\n\n    var doDing = function() {\n      if(!luv.media.isLoaded()) { return; }\n      dingSound.play();\n    }\n\n    luv.keyboard.onPressed = luv.mouse.onPressed = doDing;\n\n    luv.draw = function() {\n      luv.graphics.print(\"Total Instances: \" + dingSound.countInstances(), 100, 100);\n      luv.graphics.print(\"Playing Instances: \" + dingSound.countPlayingInstances(), 100, 150);\n    };\n\n    luv.run();\n  </script>\n</body>\n</html>\n"},{"id":"hello_luv","name":"Hello Luv","html":"<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>Basic luv.js example</title>\n  <script src=\"../luv.js\"></script>\n</head>\n<body>\n  <script>\n    var luv = Luv();\n\n    luv.draw = function() {\n      luv.graphics.print(\"Hello, luv <3 <3\", 200, 300);\n    };\n\n    luv.run();\n  </script>\n</body>\n</html>\n"},{"id":"paint","name":"Paint","html":"<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>Paint</title>\n  <script src=\"../luv.js\"></script>\n</head>\n<body>\n  <script>\n    var luv = Luv({fullWindow: true});\n    var canvas = luv.graphics.Canvas();\n\n    var prevPos = null;\n    var radius = 2;\n    var color  = 0;\n\n    luv.load = function() {\n      luv.graphics.setBackgroundColor(255, 255, 255);\n      luv.graphics.setLineCap('round');\n    };\n\n    luv.draw = function() {\n      luv.graphics.setLineWidth(radius * 2);\n      if(color > 255) {\n        luv.graphics.setColor(color-255, color-255, 255);\n      } else {\n        luv.graphics.setColor(0,0,color);\n      }\n      luv.graphics.draw(canvas, 0, 0);\n      var pos = luv.mouse.getPosition();\n      luv.graphics.fillCircle(pos.x, pos.y, radius);\n      prevPos = pos;\n    };\n\n    luv.update = function(dt) {\n      if(luv.mouse.isPressed(\"l\")) {\n        var pos = luv.mouse.getPosition()\n        luv.graphics.setCanvas(canvas);\n        if(prevPos.x === pos.x && prevPos.y === pos.y) {\n          luv.graphics.fillCircle(pos.x, pos.y, radius);\n        } else {\n          luv.graphics.line(prevPos.x, prevPos.y, pos.x, pos.y);\n        }\n      }\n    };\n\n    luv.onResize = function(width, height) {\n      canvas.setDimensions(width, height);\n    };\n\n    luv.mouse.onPressed = function(x,y,button) {\n      switch(button) {\n        case \"l\":\n          prevPos = {x: x, y: y};\n          break;\n        case \"wu\":\n          radius = Math.min(64, radius + 1);\n          color  = Math.min(510, color + 8);\n          break;\n        case \"wd\":\n          radius = Math.max(2, radius - 1);\n          color  = Math.max(0, color - 8);\n          break;\n      }\n    };\n\n    luv.run();\n  </script>\n</body>\n</html>\n"},{"id":"rectangles","name":"Rectangles","html":"<!doctype html>\n<html>\n<head>\n  <meta charset=\"utf-8\" />\n  <title>Colored rectangles with luv</title>\n  <script src=\"../luv.js\"></script>\n</head>\n<body>\n  <script>\n    var rand = function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    var rectangles = [];\n\n    var luv = Luv({fullWindow: true});\n\n    luv.load = function() {\n      var d = luv.graphics.getDimensions();\n      for(var i=0; i<200; i++) {\n        rectangles.push({\n          l: rand(0,d.width - 50), t: rand(0, d.height - 50), w: rand(50,100), h: rand(50,100),\n          vx: rand(-100,100), vy: rand(-100, 100),\n          r: rand(50,255), g: rand(50,255), b: rand(50,255),\n          type: rand(0,1) ? 'fill' : 'stroke'\n        });\n      }\n    };\n\n    luv.update = function(dt) {\n      var d = luv.graphics.getDimensions();\n      for(var i=0; i<rectangles.length; i++) {\n        var r = rectangles[i];\n        r.l += r.vx * dt;\n        r.t += r.vy * dt;\n        if(r.l < 0)              { r.vx =  Math.abs(r.vx); }\n        if(r.l > d.width - r.w)  { r.vx = -Math.abs(r.vx); }\n        if(r.t < 0)              { r.vy =  Math.abs(r.vy); }\n        if(r.t > d.height - r.h) { r.vy = -Math.abs(r.vy); }\n      }\n    };\n\n    luv.draw = function() {\n      var rect = null;\n      for(var i=0; i<rectangles.length; i++) {\n        rect = rectangles[i];\n        luv.graphics.setColor(rect.r, rect.g, rect.b);\n\n        if(rect.type == 'fill') {\n          luv.graphics.fillRectangle(rect.l, rect.t, rect.w, rect.h);\n        } else {\n          luv.graphics.strokeRectangle(rect.l, rect.t, rect.w, rect.h);\n        }\n      }\n    };\n\n    luv.run();\n  </script>\n</body>\n</html>\n"}];